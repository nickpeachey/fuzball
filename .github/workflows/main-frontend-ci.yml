name: Frontend CI Main

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
    branches:
      - main
    paths:
      - 'frontend/**'
      - '.github/workflows/main-frontend-ci.yml'
  push:
    branches:
      - main
    paths:
      - 'frontend/**'
      - '.github/workflows/main-frontend-ci.yml'

concurrency:
  group: frontend-ci-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend
    env:
      CI: true
      NEXT_TELEMETRY_DISABLED: 1
    strategy:
      matrix:
        node-version: [22.x]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: npm
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Cache Next.js build cache
        uses: actions/cache@v4
        with:
          path: |
            frontend/.next/cache
          key: ${{ runner.os }}-nextjs-${{ matrix.node-version }}-${{ hashFiles('frontend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ matrix.node-version }}-

      - name: Lint
        run: npm run lint --if-present

      - name: Build
        run: npm run build

      - name: Test (if present)
        run: npm run test

  docker-build:
    name: Docker Build (main only)
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: build-and-test
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build image (no push)
        uses: docker/build-push-action@v6
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          push: false
          tags: fuzball-frontend:main-${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
